// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file State_msg.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef _FAST_DDS_GENERATED_STATE_MSG_H_
#define _FAST_DDS_GENERATED_STATE_MSG_H_

#include <array>
#include <bitset>
#include <cstdint>
#include <map>
#include <string>
#include <vector>

#include <fastcdr/cdr/fixed_size_string.hpp>
#include <fastcdr/xcdr/external.hpp>
#include <fastcdr/xcdr/optional.hpp>



#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(STATE_MSG_SOURCE)
#define STATE_MSG_DllAPI __declspec( dllexport )
#else
#define STATE_MSG_DllAPI __declspec( dllimport )
#endif // STATE_MSG_SOURCE
#else
#define STATE_MSG_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define STATE_MSG_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
class CdrSizeCalculator;
} // namespace fastcdr
} // namespace eprosima





/*!
 * @brief This class represents the structure State_msg defined by the user in the IDL file.
 * @ingroup State_msg
 */
class State_msg
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport State_msg();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~State_msg();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object State_msg that will be copied.
     */
    eProsima_user_DllExport State_msg(
            const State_msg& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object State_msg that will be copied.
     */
    eProsima_user_DllExport State_msg(
            State_msg&& x) noexcept;

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object State_msg that will be copied.
     */
    eProsima_user_DllExport State_msg& operator =(
            const State_msg& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object State_msg that will be copied.
     */
    eProsima_user_DllExport State_msg& operator =(
            State_msg&& x) noexcept;

    /*!
     * @brief Comparison operator.
     * @param x State_msg object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const State_msg& x) const;

    /*!
     * @brief Comparison operator.
     * @param x State_msg object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const State_msg& x) const;

    /*!
     * @brief This function sets a value in member state_driver
     * @param _state_driver New value for member state_driver
     */
    eProsima_user_DllExport void state_driver(
            uint32_t _state_driver);

    /*!
     * @brief This function returns the value of member state_driver
     * @return Value of member state_driver
     */
    eProsima_user_DllExport uint32_t state_driver() const;

    /*!
     * @brief This function returns a reference to member state_driver
     * @return Reference to member state_driver
     */
    eProsima_user_DllExport uint32_t& state_driver();


    /*!
     * @brief This function sets a value in member state_mes
     * @param _state_mes New value for member state_mes
     */
    eProsima_user_DllExport void state_mes(
            uint32_t _state_mes);

    /*!
     * @brief This function returns the value of member state_mes
     * @return Value of member state_mes
     */
    eProsima_user_DllExport uint32_t state_mes() const;

    /*!
     * @brief This function returns a reference to member state_mes
     * @return Reference to member state_mes
     */
    eProsima_user_DllExport uint32_t& state_mes();


    /*!
     * @brief This function sets a value in member state_error
     * @param _state_error New value for member state_error
     */
    eProsima_user_DllExport void state_error(
            uint32_t _state_error);

    /*!
     * @brief This function returns the value of member state_error
     * @return Value of member state_error
     */
    eProsima_user_DllExport uint32_t state_error() const;

    /*!
     * @brief This function returns a reference to member state_error
     * @return Reference to member state_error
     */
    eProsima_user_DllExport uint32_t& state_error();

private:

    uint32_t m_state_driver{0};
    uint32_t m_state_mes{0};
    uint32_t m_state_error{0};

};

#endif // _FAST_DDS_GENERATED_STATE_MSG_H_



